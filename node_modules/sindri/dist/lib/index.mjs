import{readFile as oe,stat as Te}from"fs/promises";import V from"path";import Ae from"gzip-js";import ve from"ignore-walk";import Oe from"tar";import xe from"tar-js";var T=class{constructor(e){this.config=e}};import W from"axios";import{AxiosError as Z}from"axios";import ne from"@fullstax/p-retry";import{File as se}from"buffer";import{FormData as ie}from"formdata-node";var A=process.env.BROWSER_BUILD?window.File:se,I=process.env.BROWSER_BUILD?window.FormData:ie;var E=class extends Error{url;status;statusText;body;request;constructor(e,r,o){super(o),this.name="ApiError",this.url=r.url,this.status=r.status,this.statusText=r.statusText,this.body=r.body,this.request=e}};var j=class extends Error{constructor(e){super(e),this.name="CancelError"}get isCancelled(){return!0}},v=class{#t;#r;#e;#o;#s;#n;#i;constructor(e){this.#t=!1,this.#r=!1,this.#e=!1,this.#o=[],this.#s=new Promise((r,o)=>{this.#n=r,this.#i=o;let s=p=>{this.#t||this.#r||this.#e||(this.#t=!0,this.#n?.(p))},n=p=>{this.#t||this.#r||this.#e||(this.#r=!0,this.#i?.(p))},i=p=>{this.#t||this.#r||this.#e||this.#o.push(p)};return Object.defineProperty(i,"isResolved",{get:()=>this.#t}),Object.defineProperty(i,"isRejected",{get:()=>this.#r}),Object.defineProperty(i,"isCancelled",{get:()=>this.#e}),e(s,n,i)})}get[Symbol.toStringTag](){return"Cancellable Promise"}then(e,r){return this.#s.then(e,r)}catch(e){return this.#s.catch(e)}finally(e){return this.#s.finally(e)}cancel(){if(!(this.#t||this.#r||this.#e)){if(this.#e=!0,this.#o.length)try{for(let e of this.#o)e()}catch(e){console.warn("Cancellation threw an error",e);return}this.#o.length=0,this.#i?.(new j("Request aborted"))}}get isCancelled(){return this.#e}};var K=t=>t!=null,B=t=>typeof t=="string",U=t=>B(t)&&t!=="",X=t=>typeof t=="object"&&typeof t.type=="string"&&typeof t.stream=="function"&&typeof t.arrayBuffer=="function"&&typeof t.constructor=="function"&&typeof t.constructor.name=="string"&&/^(Blob|File)$/.test(t.constructor.name)&&/^(Blob|File)$/.test(t[Symbol.toStringTag]),ae=t=>t instanceof I,pe=t=>t>=200&&t<300,le=t=>{try{return btoa(t)}catch{return Buffer.from(t).toString("base64")}},ue=t=>{let e=[],r=(s,n)=>{e.push(`${encodeURIComponent(s)}=${encodeURIComponent(String(n))}`)},o=(s,n)=>{K(n)&&(Array.isArray(n)?n.forEach(i=>{o(s,i)}):typeof n=="object"?Object.entries(n).forEach(([i,p])=>{o(`${s}[${i}]`,p)}):r(s,n))};return Object.entries(t).forEach(([s,n])=>{o(s,n)}),e.length>0?`?${e.join("&")}`:""},ce=(t,e)=>{let r=t.ENCODE_PATH||encodeURI,o=e.url.replace("{api-version}",t.VERSION).replace(/{(.*?)}/g,(n,i)=>e.path?.hasOwnProperty(i)?r(String(e.path[i])):n),s=`${t.BASE}${o}`;return e.query?`${s}${ue(e.query)}`:s},me=t=>{if(t.formData){if(t.formData instanceof I)return t.formData;let e=new I,r=(o,s)=>{B(s)||X(s)?e.append(o,s):e.append(o,JSON.stringify(s))};return Object.entries(t.formData).filter(([o,s])=>K(s)).forEach(([o,s])=>{Array.isArray(s)?s.forEach(n=>r(o,n)):r(o,s)}),e}},F=async(t,e)=>typeof e=="function"?e(t):e,fe=async(t,e,r)=>{let o=await F(e,t.TOKEN),s=await F(e,t.USERNAME),n=await F(e,t.PASSWORD),i=await F(e,t.HEADERS),p=r&&"getHeaders"in r&&typeof r?.getHeaders=="function"&&r?.getHeaders()||{},u=Object.entries({Accept:"application/json",...i,...e.headers,...p}).filter(([l,a])=>K(a)).reduce((l,[a,c])=>({...l,[a]:String(c)}),{});if(U(o)&&(u.Authorization=`Bearer ${o}`),U(s)&&U(n)){let l=le(`${s}:${n}`);u.Authorization=`Basic ${l}`}return e.body&&(e.mediaType?u["Content-Type"]=e.mediaType:X(e.body)?u["Content-Type"]=e.body.type||"application/octet-stream":B(e.body)?u["Content-Type"]="text/plain":ae(e.body)||(u["Content-Type"]="application/json")),u},de=t=>{if(t.body)return t.body},Q=t=>!!(W.isAxiosError(t)&&(t.response?.status&&[502,503,504].includes(t.response.status)||t.code&&["ECONNREFUSED","ECONNRESET","ENOTFOUND","ENETUNREACH",Z.ECONNABORTED,Z.ERR_NETWORK].includes(t.code))),he=async(t,e,r,o,s,n,i,p)=>{let u=W.CancelToken.source(),l={url:r,headers:n,data:o??s,method:e.method,withCredentials:t.WITH_CREDENTIALS,cancelToken:u.token,responseType:e.responseType};i(()=>u.cancel("The user aborted a request."));try{return t.sindri?await ne(()=>p.request(l),{...t.sindri.retryOptions,onFailedAttempt:a=>{Q(a)&&t.sindri.logger.debug({attemptNumber:a.attemptNumber,error:a.message,retriesLeft:a.retriesLeft},`${e.method} ${r} - Request failed, ${a.retriesLeft>0?"retrying":"aborting..."}...`)},shouldRetry:Q}):await p.request(l)}catch(a){let c=a;if(c.response)return c.response;throw a}},ge=(t,e)=>{if(e){let r=t.headers[e];if(B(r))return r}},ye=t=>{if(t.status!==204)return t.data},Re=(t,e)=>{let o={400:"Bad Request",401:"Unauthorized",403:"Forbidden",404:"Not Found",500:"Internal Server Error",502:"Bad Gateway",503:"Service Unavailable",...t.errors}[e.status];if(o)throw new E(t,e,o);if(!e.ok){let s=e.status??"unknown",n=e.statusText??"unknown",i=(()=>{try{return JSON.stringify(e.body,null,2)}catch{return}})();throw new E(t,e,`Generic Error: status: ${s}; status text: ${n}; body: ${i}`)}},Y=(t,e,r=W)=>new v(async(o,s,n)=>{let i=Date.now(),p=()=>{let a=Date.now()-i;if(a<1e3)return`${a} ms`;let c=a/1e3;if(c<60)return`${c.toFixed(2)} s`;let y=c/60;return y<60?`${y.toFixed(2)} m`:`${(y/60).toFixed(2)} h`},u=ce(t,e),l=`${e.method} ${u}`;try{let a=me(e),c=de(e),y=await fe(t,e,a);if(!n.isCancelled){t.sindri?.logger.debug(`${l} requested`);let d=await he(t,e,u,c,a,y,n,r),R=ye(d),h=ge(d,e.responseHeader),g={url:u,ok:pe(d.status),status:d.status,statusText:d.statusText,body:h??R},C=`${l} ${d.status} ${d.statusText} (${p()})`;!g.body||typeof g.body=="string"?t.sindri?.logger.debug(`${C} - ${g.body||"<empty-body>"}`):e.responseType==="stream"?t.sindri?.logger.debug(`${C} - <streaming-response>`):e.responseType==="blob"?t.sindri?.logger.debug(`${C} - <blob-response>`):t.sindri?.logger.debug(g.body,C),Re(e,g),o(g.body)}}catch(a){let c=a instanceof Error?a.message:"Unknown error";t.sindri?.logger.debug(`${l} ERROR (${p()}) - ${c}`),s(a)}});var k=class extends T{constructor(e){super(e)}request(e){return Y(this.config,e)}};var O=class{constructor(e){this.httpRequest=e}apikeyGenerate(e){return this.httpRequest.request({method:"POST",url:"/api/apikey/generate",body:e,mediaType:"application/json",errors:{400:"Bad Request",401:"Unauthorized",403:"Forbidden"}})}apikeyGenerateWithAuth(e){return this.httpRequest.request({method:"POST",url:"/api/v1/apikey/generate",query:{name:e},errors:{400:"Bad Request"}})}apikeyList(){return this.httpRequest.request({method:"GET",url:"/api/v1/apikey/list",errors:{500:"Internal Server Error"}})}apikeyDelete(e){return this.httpRequest.request({method:"DELETE",url:"/api/v1/apikey/{apikey_id}/delete",path:{apikey_id:e},errors:{404:"Not Found",500:"Internal Server Error"}})}};var x=class{constructor(e){this.httpRequest=e}circuitCreate(e){return this.httpRequest.request({method:"POST",url:"/api/v1/circuit/create",formData:e,mediaType:"multipart/form-data",errors:{400:"Bad Request",422:"Unprocessable Entity",500:"Internal Server Error",501:"Not Implemented"}})}circuitList(){return this.httpRequest.request({method:"GET",url:"/api/v1/circuit/list",errors:{500:"Internal Server Error"}})}circuitDetail(e,r=!0){return this.httpRequest.request({method:"GET",url:"/api/v1/circuit/{circuit_id}/detail",path:{circuit_id:e},query:{include_verification_key:r},errors:{404:"Not Found",500:"Internal Server Error"}})}circuitDelete(e){return this.httpRequest.request({method:"DELETE",url:"/api/v1/circuit/{circuit_id}/delete",path:{circuit_id:e},errors:{404:"Not Found",500:"Internal Server Error"}})}circuitProofs(e){return this.httpRequest.request({method:"GET",url:"/api/v1/circuit/{circuit_id}/proofs",path:{circuit_id:e},errors:{404:"Not Found",500:"Internal Server Error"}})}proofCreate(e,r){return this.httpRequest.request({method:"POST",url:"/api/v1/circuit/{circuit_id}/prove",path:{circuit_id:e},body:r,mediaType:"application/json",errors:{400:"Bad Request",404:"Not Found",409:"Conflict",501:"Not Implemented"}})}};var q=class{constructor(e){this.httpRequest=e}circuitDownload(e,r){return this.httpRequest.request({method:"GET",url:"/api/v1/circuit/{circuit_id}/download",path:{circuit_id:e},query:{path:r},errors:{404:"Not Found",500:"Internal Server Error"},responseType:process.env.BROWSER_BUILD?"blob":"stream"})}circuitProofsPaginated(e,r=100,o){return this.httpRequest.request({method:"GET",url:"/api/v1/circuit/{circuit_id}/proofs/paginated",path:{circuit_id:e},query:{limit:r,offset:o},errors:{404:"Not Found",500:"Internal Server Error"}})}projectCircuits(e){return this.httpRequest.request({method:"GET",url:"/api/v1/project/{project_id}/circuits",path:{project_id:e},errors:{404:"Not Found",500:"Internal Server Error"}})}projectCircuitsPaginated(e,r=100,o){return this.httpRequest.request({method:"GET",url:"/api/v1/project/{project_id}/circuits/paginated",path:{project_id:e},query:{limit:r,offset:o},errors:{404:"Not Found",500:"Internal Server Error"}})}projectDelete(e){return this.httpRequest.request({method:"DELETE",url:"/api/v1/project/{project_id}/delete",path:{project_id:e},errors:{404:"Not Found",500:"Internal Server Error"}})}projectDetail(e){return this.httpRequest.request({method:"GET",url:"/api/v1/project/{project_id}/detail",path:{project_id:e},errors:{404:"Not Found",500:"Internal Server Error"}})}projectList(e){return this.httpRequest.request({method:"POST",url:"/api/v1/project/list",body:e,mediaType:"application/json",errors:{404:"Not Found",500:"Internal Server Error"}})}projectListPaginated(e,r=100,o){return this.httpRequest.request({method:"POST",url:"/api/v1/project/list/paginated",query:{limit:r,offset:o},body:e,mediaType:"application/json",errors:{404:"Not Found",500:"Internal Server Error"}})}projectProofs(e){return this.httpRequest.request({method:"GET",url:"/api/v1/project/{project_id}/proofs",path:{project_id:e},errors:{404:"Not Found",500:"Internal Server Error"}})}projectProofsPaginated(e,r=100,o){return this.httpRequest.request({method:"GET",url:"/api/v1/project/{project_id}/proofs/paginated",path:{project_id:e},query:{limit:r,offset:o},errors:{404:"Not Found",500:"Internal Server Error"}})}projectSettings(e,r){return this.httpRequest.request({method:"POST",url:"/api/v1/project/{project_name}/settings",path:{project_name:e},body:r,mediaType:"application/json",errors:{404:"Not Found",422:"Unprocessable Entity",500:"Internal Server Error"}})}circuitSmartContractVerifier(e){return this.httpRequest.request({method:"GET",url:"/api/v1/circuit/{circuit_id}/smart_contract_verifier",path:{circuit_id:e},errors:{404:"Not Found",409:"Conflict",500:"Internal Server Error",501:"Not Implemented"}})}circuitStatus(e){return this.httpRequest.request({method:"GET",url:"/api/v1/circuit/{circuit_id}/status",path:{circuit_id:e},errors:{404:"Not Found",500:"Internal Server Error"}})}passwordChangeWithJwtAuth(e){return this.httpRequest.request({method:"POST",url:"/api/v1/password/change",body:e,mediaType:"application/json",errors:{422:"Unprocessable Entity"}})}proofList(e){return this.httpRequest.request({method:"POST",url:"/api/v1/proof/list",body:e,mediaType:"application/json",errors:{500:"Internal Server Error"}})}proofListPaginated(e,r=100,o){return this.httpRequest.request({method:"POST",url:"/api/v1/proof/list/paginated",query:{limit:r,offset:o},body:e,mediaType:"application/json",errors:{500:"Internal Server Error"}})}proofStatus(e){return this.httpRequest.request({method:"GET",url:"/api/v1/proof/{proof_id}/status",path:{proof_id:e},errors:{404:"Not Found",500:"Internal Server Error"}})}sindriManifestSchema(){return this.httpRequest.request({method:"GET",url:"/api/v1/sindri-manifest-schema.json"})}teamAvatarUpload(e){return this.httpRequest.request({method:"POST",url:"/api/v1/team/avatar/upload",formData:e,mediaType:"multipart/form-data",errors:{400:"Bad Request",500:"Internal Server Error"}})}teamDetail(e){return this.httpRequest.request({method:"GET",url:"/api/v1/team/{team_name}/detail",path:{team_name:e},errors:{404:"Not Found"}})}teamMe(){return this.httpRequest.request({method:"GET",url:"/api/v1/team/me"})}userMeWithJwtAuth(){return this.httpRequest.request({method:"GET",url:"/api/v1/user/me"})}};var w=class{constructor(e){this.httpRequest=e}proofDetail(e,r=!0,o=!0,s=!0,n=!0){return this.httpRequest.request({method:"GET",url:"/api/v1/proof/{proof_id}/detail",path:{proof_id:e},query:{include_proof:r,include_public:o,include_smart_contract_calldata:s,include_verification_key:n},errors:{404:"Not Found",500:"Internal Server Error",501:"Not Implemented"}})}proofDelete(e){return this.httpRequest.request({method:"DELETE",url:"/api/v1/proof/{proof_id}/delete",path:{proof_id:e},errors:{404:"Not Found",500:"Internal Server Error"}})}};var _=class{constructor(e){this.httpRequest=e}jwtTokenVerify(e){return this.httpRequest.request({method:"POST",url:"/api/token/verify",body:e,mediaType:"application/json"})}jwtTokenGenerate(e){return this.httpRequest.request({method:"POST",url:"/api/token/pair",body:e,mediaType:"application/json",errors:{403:"Forbidden"}})}jwtTokenRefresh(e){return this.httpRequest.request({method:"POST",url:"/api/token/refresh",body:e,mediaType:"application/json"})}};var N=class{authorization;circuits;internal;proofs;token;request;constructor(e,r=k){this.request=new r({BASE:e?.BASE??"https://sindri.app",VERSION:e?.VERSION??"1.12.21",WITH_CREDENTIALS:e?.WITH_CREDENTIALS??!1,CREDENTIALS:e?.CREDENTIALS??"include",TOKEN:e?.TOKEN,USERNAME:e?.USERNAME,PASSWORD:e?.PASSWORD,HEADERS:e?.HEADERS,ENCODE_PATH:e?.ENCODE_PATH}),this.authorization=new O(this.request),this.circuits=new x(this.request),this.internal=new q(this.request),this.proofs=new w(this.request),this.token=new _(this.request)}};import L from"fs";import ee from"path";import be from"env-paths";import D from"lodash";import{z as b}from"zod";var te=()=>{let t=be("sindri",{suffix:""});return ee.join(t.config,"sindri.conf.json")},J=b.object({auth:b.nullable(b.object({apiKey:b.string(),apiKeyId:b.string(),apiKeyName:b.string(),baseUrl:b.string().url(),teamId:b.number(),teamSlug:b.string()})).default(null)}),Ce=J.parse({}),Pe=t=>{let e=te();if(L.existsSync(e)){t?.debug(`Loading config from "${e}".`);try{let r=L.readFileSync(e,{encoding:"utf-8"}),o=J.parse(JSON.parse(r));return t?.debug("Config loaded successfully."),o}catch(r){t?.warn(`The config schema in "${e}" is invalid and will not be used.
To remove it and start fresh, run:
    rm ${e}`),t?.debug(r)}}return t?.debug(`Config file "${e}" does not exist, initializing default config.`),D.cloneDeep(Ce)},$=class{_config;logger;constructor(e){this.logger=e,this.reload()}get auth(){return D.cloneDeep(this._config.auth)}get config(){return D.cloneDeep(this._config)}reload(){this._config=Pe(this.logger)}update(e){this.logger?.debug("Merging in config update:"),this.logger?.debug(e);let r=D.cloneDeep(this._config);D.merge(r,e),this._config=J.parse(r);let o=te(),s=ee.dirname(o);L.existsSync(s)||L.mkdirSync(s,{recursive:!0}),this.logger?.debug(`Writing merged config to "${o}":`,this._config),L.writeFileSync(o,JSON.stringify(this._config,null,2),{encoding:"utf-8"})}};import Ie from"pino";import Ee from"pino-pretty";var G=t=>{let e=Ie(process.env.BROWSER_BUILD?{browser:{asObject:!0}}:Ee({colorize:!0,destination:2,ignore:"hostname,pid",levelFirst:!1,sync:!0}));return e.level=t??!0?"silent":"info",e},$t=G();var P=null;function Se({cache:t=!0,logger:e,raiseExceptions:r=!1}={}){if(t&&P)return P;if(process.env.BROWSER_BUILD)return P={};let{SINDRI_META:o}=process.env;if(!o)return P={};let s=([i,p])=>{if(typeof p!="string"){let l=`Invalid metadata entry for '${i}' (value must be a string).`;if(r)throw new Error(l);return e?.warn({key:i,value:p,SINDRI_META:o},l+" Ignoring."),!1}let u=re(i,p);if(u){if(r)throw new Error(u);return e?.warn({key:i,value:p,SINDRI_META:o},u+" Ignoring."),!1}return!0};if(o.startsWith("{"))try{return P=Object.fromEntries(Object.entries(JSON.parse(o)).filter(s))}catch(i){let p="Failed to parse 'SINDRI_META' as JSON.";if(r)throw new Error(p);return e?.warn({SINDRI_META:o,error:i.toString()},p+" Using '{}' as the default."),P={}}let n="\0";return P=Object.fromEntries(o.replace(/::/g,n).split(":").map(i=>i.replace(new RegExp(n,"g"),":")).filter(i=>{if(!i.includes("=")){let p=`Invalid 'SINDRI_META' metadata segment '${i}' (missing '=', try 'key=value').`;if(r)throw new Error(p);return e?.warn({segment:i,SINDRI_META:o},p+" Ignoring."),!1}return!0}).map(i=>{let p=i.indexOf("=");return[i.slice(0,p),i.slice(p+1)]}).filter(s))}function z(t){let e=Se({raiseExceptions:!0});return Object.entries(t).forEach(([r,o])=>{let s=re(r,o);if(s)throw new Error(s)}),{...e,...t}}function re(t,e){let i=/^[a-zA-Z][a-zA-Z0-9_-]*$/;return t.length<1||t.length>64?`Invalid metadata key length for '${t}' (must be 1-64 characters).`:i.test(t)?e.length<0||e.length>4096?`Invalid metadata value length for '${t}' (must be 0-4096 characters).`:null:`Invalid metadata key for '${t}' (must start with an alphabet character and only include alphanumeric characters, underscores, and hyphens).`}var H=class t{_client;_clientConfig;_config;logger;pollingInterval=1e3;retryOptions={minTimeout:1e3,retries:6};constructor(e={},{retryOptions:r}={}){this._client=new N,this._clientConfig=this._client.request.config;let o="v0.0.1-alpha.61";this._clientConfig.HEADERS={...this._clientConfig.HEADERS,"Sindri-Client":`sindri-js-sdk/${o}`},this.logger=G(),process.env.BROWSER_BUILD||(this._config=new $(this.logger)),this._clientConfig.sindri=this,this.authorize(e),r&&(this.retryOptions=structuredClone(r))}get apiKey(){return this._clientConfig.TOKEN&&typeof this._clientConfig.TOKEN!="string"?null:this._clientConfig.TOKEN||null}get baseUrl(){return this._clientConfig.BASE}get logLevel(){return this.logger.level}set logLevel(e){this.logger.level=e,this.logger.debug(`Set log level to "${this.logger.level}".`)}authorize(e){return process.env.BROWSER_BUILD?(this._clientConfig.BASE=e.baseUrl||"https://sindri.app",this._clientConfig.TOKEN=e.apiKey):(this._config.reload(),this._clientConfig.BASE=e.baseUrl||process.env.SINDRI_BASE_URL||this._config.auth?.baseUrl||this._clientConfig.BASE||"https://sindri.app",this._clientConfig.TOKEN=e.apiKey||process.env.SINDRI_API_KEY||this._config.auth?.apiKey),!!(this._clientConfig.BASE&&this._clientConfig.TOKEN)}create(e,r){return new t(e,r)}async createCircuit(e,r=["latest"],o={}){let s=new I;r=typeof r=="string"?[r]:r??[];for(let l of r){if(!/^[-a-zA-Z0-9_.]+$/.test(l))throw new Error(`"${l}" is not a valid tag. Tags may only contain alphanumeric characters, underscores, hyphens, and periods.`);s.append("tags",l)}if(r.length===0&&s.append("tags",""),s.append("meta",JSON.stringify(z(o))),typeof e=="string"){if(process.env.BROWSER_BUILD)throw new Error("Specifying `project` as a path is not allowed in the browser build.");let l;try{l=await Te(e)}catch{throw new Error(`The "${e}" path does not exist or you do not have permission to access it.`)}if(l.isFile()){if(!/\.(zip|tar|tar\.gz|tgz)$/i.test(e))throw new Error("Only gzipped tarballs or zip files are supported.");let a=V.basename(e),c=await oe(e);s.append("files",new A([c],a))}else if(l.isDirectory()){let a=V.join(e,"sindri.json"),c;try{c=await oe(a,{encoding:"utf-8"})}catch{throw new Error(`Expected Sindri manifest file at "${a}" does not exist.`)}let y;try{y=JSON.parse(c)}catch{throw new Error(`Could not parse "${a}", is it valid JSON?`)}let d=y?.name;if(!d)throw new Error(`No circuit "name" field was found in "${a}", the manifest is invalid.`);let R=ve.sync({follow:!0,ignoreFiles:[".sindriignore"],path:e}).filter(S=>!/(^|\/)\.git(\/|$)/.test(S)),h=V.basename(a);R.includes(h)||R.push(h);let g=`${d}.tar.gz`;R.sort((S,M)=>S.localeCompare(M));let C=Oe.c({cwd:e,gzip:!0,onwarn:(S,M)=>{this.logger.warn(`While creating tarball: ${S} - ${M}`)},prefix:`${d}/`,sync:!0},R);s.append("files",new A([C.read()],g))}else throw new Error(`The "${e}" path is not a file or directory.`)}else if(Array.isArray(e)){if(!e.every(h=>h instanceof A))throw new Error("All entries in `project` must be `File` instances.");let l=e.find(h=>h.name==="sindri.json");if(!l)throw new Error("The `project` array must include a `sindri.json` file.");let a;try{a=JSON.parse(await l.text())}catch{throw new Error('Could not parse "sindri.json", is it valid JSON?')}let c=a?.name;if(!c)throw new Error('No circuit "name" field was found in "sindri.json", the manifest is invalid.');let y=new xe;e.sort((h,g)=>h.name.localeCompare(g.name));for(let h of e){let g=new Uint8Array(await h.arrayBuffer());await new Promise(C=>y.append(`${c}/${h.name}`,g,C))}let d=new Uint8Array(Ae.zip(y.out)),R=new A([d],`${c}.tar.gz`);process.env.BROWSER_BUILD,s.append("files",R)}let n=this._clientConfig.HEADERS;this._clientConfig.HEADERS={...n,"Content-Type":"multipart/form-data; boundary=----WebKitFormBoundary0buQ8d6EhWcs9X9d"};let p=await this._client.circuits.circuitCreate(s);this._clientConfig.HEADERS=n;let u=p.circuit_id;for(;;){let l=await this._client.internal.circuitStatus(u);if(l.status==="Ready"||l.status==="Failed")break;await new Promise(a=>setTimeout(a,this.pollingInterval))}return this._client.circuits.circuitDetail(u,!1)}async getAllCircuitProofs(e){return await this._client.circuits.circuitProofs(e)}async getAllCircuits(){return await this._client.circuits.circuitList()}async getCircuit(e){return await this._client.circuits.circuitDetail(e)}async getProof(e){return await this._client.proofs.proofDetail(e)}async proveCircuit(e,r,o=!1,s=!1,n={}){let p=(await this._client.circuits.proofCreate(e,{meta:z(n),perform_verify:o,proof_input:r})).proof_id;for(;;){let u=await this._client.internal.proofStatus(p);if(u.status==="Ready"||u.status==="Failed")break;await new Promise(l=>setTimeout(l,this.pollingInterval))}return this._client.proofs.proofDetail(p,!0,!0,s,!0)}};var pr=new H;export{pr as default};
//# sourceMappingURL=index.mjs.map