"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; } function _nullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } } function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; } var _class;var _promises = require('fs/promises');var _path = require('path'); var _path2 = _interopRequireDefault(_path);var _gzipjs = require('gzip-js'); var _gzipjs2 = _interopRequireDefault(_gzipjs);var _ignorewalk = require('ignore-walk'); var _ignorewalk2 = _interopRequireDefault(_ignorewalk);var _tar = require('tar'); var _tar2 = _interopRequireDefault(_tar);var _tarjs = require('tar-js'); var _tarjs2 = _interopRequireDefault(_tarjs);var S=class{constructor(e){this.config=e}};var _axios = require('axios'); var _axios2 = _interopRequireDefault(_axios);var _pretry = require('@fullstax/p-retry'); var _pretry2 = _interopRequireDefault(_pretry);var _buffer = require('buffer');var _formdatanode = require('formdata-node');var T=process.env.BROWSER_BUILD?window.File:_buffer.File,P=process.env.BROWSER_BUILD?window.FormData:_formdatanode.FormData;var I=class extends Error{constructor(e,r,o){super(o),this.name="ApiError",this.url=r.url,this.status=r.status,this.statusText=r.statusText,this.body=r.body,this.request=e}};var L=class extends Error{constructor(e){super(e),this.name="CancelError"}get isCancelled(){return!0}},A=class{#t;#r;#e;#o;#s;#n;#i;constructor(e){this.#t=!1,this.#r=!1,this.#e=!1,this.#o=[],this.#s=new Promise((r,o)=>{this.#n=r,this.#i=o;let s=p=>{this.#t||this.#r||this.#e||(this.#t=!0,_optionalChain([this, 'access', _2 => _2.#n, 'optionalCall', _3 => _3(p)]))},n=p=>{this.#t||this.#r||this.#e||(this.#r=!0,_optionalChain([this, 'access', _4 => _4.#i, 'optionalCall', _5 => _5(p)]))},i=p=>{this.#t||this.#r||this.#e||this.#o.push(p)};return Object.defineProperty(i,"isResolved",{get:()=>this.#t}),Object.defineProperty(i,"isRejected",{get:()=>this.#r}),Object.defineProperty(i,"isCancelled",{get:()=>this.#e}),e(s,n,i)})}get[Symbol.toStringTag](){return"Cancellable Promise"}then(e,r){return this.#s.then(e,r)}catch(e){return this.#s.catch(e)}finally(e){return this.#s.finally(e)}cancel(){if(!(this.#t||this.#r||this.#e)){if(this.#e=!0,this.#o.length)try{for(let e of this.#o)e()}catch(e){console.warn("Cancellation threw an error",e);return}this.#o.length=0,_optionalChain([this, 'access', _6 => _6.#i, 'optionalCall', _7 => _7(new L("Request aborted"))])}}get isCancelled(){return this.#e}};var W=t=>t!=null,F=t=>typeof t=="string",M=t=>F(t)&&t!=="",Q=t=>typeof t=="object"&&typeof t.type=="string"&&typeof t.stream=="function"&&typeof t.arrayBuffer=="function"&&typeof t.constructor=="function"&&typeof t.constructor.name=="string"&&/^(Blob|File)$/.test(t.constructor.name)&&/^(Blob|File)$/.test(t[Symbol.toStringTag]),ne=t=>t instanceof P,ae=t=>t>=200&&t<300,pe=t=>{try{return btoa(t)}catch (e2){return Buffer.from(t).toString("base64")}},le=t=>{let e=[],r=(s,n)=>{e.push(`${encodeURIComponent(s)}=${encodeURIComponent(String(n))}`)},o=(s,n)=>{W(n)&&(Array.isArray(n)?n.forEach(i=>{o(s,i)}):typeof n=="object"?Object.entries(n).forEach(([i,p])=>{o(`${s}[${i}]`,p)}):r(s,n))};return Object.entries(t).forEach(([s,n])=>{o(s,n)}),e.length>0?`?${e.join("&")}`:""},ue=(t,e)=>{let r=t.ENCODE_PATH||encodeURI,o=e.url.replace("{api-version}",t.VERSION).replace(/{(.*?)}/g,(n,i)=>_optionalChain([e, 'access', _8 => _8.path, 'optionalAccess', _9 => _9.hasOwnProperty, 'call', _10 => _10(i)])?r(String(e.path[i])):n),s=`${t.BASE}${o}`;return e.query?`${s}${le(e.query)}`:s},ce=t=>{if(t.formData){if(t.formData instanceof P)return t.formData;let e=new P,r=(o,s)=>{F(s)||Q(s)?e.append(o,s):e.append(o,JSON.stringify(s))};return Object.entries(t.formData).filter(([o,s])=>W(s)).forEach(([o,s])=>{Array.isArray(s)?s.forEach(n=>r(o,n)):r(o,s)}),e}},j=async(t,e)=>typeof e=="function"?e(t):e,me=async(t,e,r)=>{let o=await j(e,t.TOKEN),s=await j(e,t.USERNAME),n=await j(e,t.PASSWORD),i=await j(e,t.HEADERS),p=r&&"getHeaders"in r&&typeof _optionalChain([r, 'optionalAccess', _11 => _11.getHeaders])=="function"&&_optionalChain([r, 'optionalAccess', _12 => _12.getHeaders, 'call', _13 => _13()])||{},u=Object.entries({Accept:"application/json",...i,...e.headers,...p}).filter(([l,a])=>W(a)).reduce((l,[a,c])=>({...l,[a]:String(c)}),{});if(M(o)&&(u.Authorization=`Bearer ${o}`),M(s)&&M(n)){let l=pe(`${s}:${n}`);u.Authorization=`Basic ${l}`}return e.body&&(e.mediaType?u["Content-Type"]=e.mediaType:Q(e.body)?u["Content-Type"]=e.body.type||"application/octet-stream":F(e.body)?u["Content-Type"]="text/plain":ne(e.body)||(u["Content-Type"]="application/json")),u},fe=t=>{if(t.body)return t.body},Z=t=>!!(_axios2.default.isAxiosError(t)&&(_optionalChain([t, 'access', _14 => _14.response, 'optionalAccess', _15 => _15.status])&&[502,503,504].includes(t.response.status)||t.code&&["ECONNREFUSED","ECONNRESET","ENOTFOUND","ENETUNREACH",_axios.AxiosError.ECONNABORTED,_axios.AxiosError.ERR_NETWORK].includes(t.code))),de=async(t,e,r,o,s,n,i,p)=>{let u=_axios2.default.CancelToken.source(),l={url:r,headers:n,data:_nullishCoalesce(o, () => (s)),method:e.method,withCredentials:t.WITH_CREDENTIALS,cancelToken:u.token,responseType:e.responseType};i(()=>u.cancel("The user aborted a request."));try{return t.sindri?await _pretry2.default.call(void 0, ()=>p.request(l),{...t.sindri.retryOptions,onFailedAttempt:a=>{Z(a)&&t.sindri.logger.debug({attemptNumber:a.attemptNumber,error:a.message,retriesLeft:a.retriesLeft},`${e.method} ${r} - Request failed, ${a.retriesLeft>0?"retrying":"aborting..."}...`)},shouldRetry:Z}):await p.request(l)}catch(a){let c=a;if(c.response)return c.response;throw a}},he=(t,e)=>{if(e){let r=t.headers[e];if(F(r))return r}},ge=t=>{if(t.status!==204)return t.data},ye=(t,e)=>{let o={400:"Bad Request",401:"Unauthorized",403:"Forbidden",404:"Not Found",500:"Internal Server Error",502:"Bad Gateway",503:"Service Unavailable",...t.errors}[e.status];if(o)throw new I(t,e,o);if(!e.ok){let s=_nullishCoalesce(e.status, () => ("unknown")),n=_nullishCoalesce(e.statusText, () => ("unknown")),i=(()=>{try{return JSON.stringify(e.body,null,2)}catch (e3){return}})();throw new I(t,e,`Generic Error: status: ${s}; status text: ${n}; body: ${i}`)}},X=(t,e,r=_axios2.default)=>new A(async(o,s,n)=>{let i=Date.now(),p=()=>{let a=Date.now()-i;if(a<1e3)return`${a} ms`;let c=a/1e3;if(c<60)return`${c.toFixed(2)} s`;let g=c/60;return g<60?`${g.toFixed(2)} m`:`${(g/60).toFixed(2)} h`},u=ue(t,e),l=`${e.method} ${u}`;try{let a=ce(e),c=fe(e),g=await me(t,e,a);if(!n.isCancelled){_optionalChain([t, 'access', _16 => _16.sindri, 'optionalAccess', _17 => _17.logger, 'access', _18 => _18.debug, 'call', _19 => _19(`${l} requested`)]);let f=await de(t,e,u,c,a,g,n,r),y=ge(f),d=he(f,e.responseHeader),h={url:u,ok:ae(f.status),status:f.status,statusText:f.statusText,body:_nullishCoalesce(d, () => (y))},b=`${l} ${f.status} ${f.statusText} (${p()})`;!h.body||typeof h.body=="string"?_optionalChain([t, 'access', _20 => _20.sindri, 'optionalAccess', _21 => _21.logger, 'access', _22 => _22.debug, 'call', _23 => _23(`${b} - ${h.body||"<empty-body>"}`)]):e.responseType==="stream"?_optionalChain([t, 'access', _24 => _24.sindri, 'optionalAccess', _25 => _25.logger, 'access', _26 => _26.debug, 'call', _27 => _27(`${b} - <streaming-response>`)]):e.responseType==="blob"?_optionalChain([t, 'access', _28 => _28.sindri, 'optionalAccess', _29 => _29.logger, 'access', _30 => _30.debug, 'call', _31 => _31(`${b} - <blob-response>`)]):_optionalChain([t, 'access', _32 => _32.sindri, 'optionalAccess', _33 => _33.logger, 'access', _34 => _34.debug, 'call', _35 => _35(h.body,b)]),ye(e,h),o(h.body)}}catch(a){let c=a instanceof Error?a.message:"Unknown error";_optionalChain([t, 'access', _36 => _36.sindri, 'optionalAccess', _37 => _37.logger, 'access', _38 => _38.debug, 'call', _39 => _39(`${l} ERROR (${p()}) - ${c}`)]),s(a)}});var B=class extends S{constructor(e){super(e)}request(e){return X(this.config,e)}};var v=class{constructor(e){this.httpRequest=e}apikeyGenerate(e){return this.httpRequest.request({method:"POST",url:"/api/apikey/generate",body:e,mediaType:"application/json",errors:{400:"Bad Request",401:"Unauthorized",403:"Forbidden"}})}apikeyGenerateWithAuth(e){return this.httpRequest.request({method:"POST",url:"/api/v1/apikey/generate",query:{name:e},errors:{400:"Bad Request"}})}apikeyList(){return this.httpRequest.request({method:"GET",url:"/api/v1/apikey/list",errors:{500:"Internal Server Error"}})}apikeyDelete(e){return this.httpRequest.request({method:"DELETE",url:"/api/v1/apikey/{apikey_id}/delete",path:{apikey_id:e},errors:{404:"Not Found",500:"Internal Server Error"}})}};var O=class{constructor(e){this.httpRequest=e}circuitCreate(e){return this.httpRequest.request({method:"POST",url:"/api/v1/circuit/create",formData:e,mediaType:"multipart/form-data",errors:{400:"Bad Request",422:"Unprocessable Entity",500:"Internal Server Error",501:"Not Implemented"}})}circuitList(){return this.httpRequest.request({method:"GET",url:"/api/v1/circuit/list",errors:{500:"Internal Server Error"}})}circuitDetail(e,r=!0){return this.httpRequest.request({method:"GET",url:"/api/v1/circuit/{circuit_id}/detail",path:{circuit_id:e},query:{include_verification_key:r},errors:{404:"Not Found",500:"Internal Server Error"}})}circuitDelete(e){return this.httpRequest.request({method:"DELETE",url:"/api/v1/circuit/{circuit_id}/delete",path:{circuit_id:e},errors:{404:"Not Found",500:"Internal Server Error"}})}circuitProofs(e){return this.httpRequest.request({method:"GET",url:"/api/v1/circuit/{circuit_id}/proofs",path:{circuit_id:e},errors:{404:"Not Found",500:"Internal Server Error"}})}proofCreate(e,r){return this.httpRequest.request({method:"POST",url:"/api/v1/circuit/{circuit_id}/prove",path:{circuit_id:e},body:r,mediaType:"application/json",errors:{400:"Bad Request",404:"Not Found",409:"Conflict",501:"Not Implemented"}})}};var x=class{constructor(e){this.httpRequest=e}circuitDownload(e,r){return this.httpRequest.request({method:"GET",url:"/api/v1/circuit/{circuit_id}/download",path:{circuit_id:e},query:{path:r},errors:{404:"Not Found",500:"Internal Server Error"},responseType:process.env.BROWSER_BUILD?"blob":"stream"})}circuitProofsPaginated(e,r=100,o){return this.httpRequest.request({method:"GET",url:"/api/v1/circuit/{circuit_id}/proofs/paginated",path:{circuit_id:e},query:{limit:r,offset:o},errors:{404:"Not Found",500:"Internal Server Error"}})}projectCircuits(e){return this.httpRequest.request({method:"GET",url:"/api/v1/project/{project_id}/circuits",path:{project_id:e},errors:{404:"Not Found",500:"Internal Server Error"}})}projectCircuitsPaginated(e,r=100,o){return this.httpRequest.request({method:"GET",url:"/api/v1/project/{project_id}/circuits/paginated",path:{project_id:e},query:{limit:r,offset:o},errors:{404:"Not Found",500:"Internal Server Error"}})}projectDelete(e){return this.httpRequest.request({method:"DELETE",url:"/api/v1/project/{project_id}/delete",path:{project_id:e},errors:{404:"Not Found",500:"Internal Server Error"}})}projectDetail(e){return this.httpRequest.request({method:"GET",url:"/api/v1/project/{project_id}/detail",path:{project_id:e},errors:{404:"Not Found",500:"Internal Server Error"}})}projectList(e){return this.httpRequest.request({method:"POST",url:"/api/v1/project/list",body:e,mediaType:"application/json",errors:{404:"Not Found",500:"Internal Server Error"}})}projectListPaginated(e,r=100,o){return this.httpRequest.request({method:"POST",url:"/api/v1/project/list/paginated",query:{limit:r,offset:o},body:e,mediaType:"application/json",errors:{404:"Not Found",500:"Internal Server Error"}})}projectProofs(e){return this.httpRequest.request({method:"GET",url:"/api/v1/project/{project_id}/proofs",path:{project_id:e},errors:{404:"Not Found",500:"Internal Server Error"}})}projectProofsPaginated(e,r=100,o){return this.httpRequest.request({method:"GET",url:"/api/v1/project/{project_id}/proofs/paginated",path:{project_id:e},query:{limit:r,offset:o},errors:{404:"Not Found",500:"Internal Server Error"}})}projectSettings(e,r){return this.httpRequest.request({method:"POST",url:"/api/v1/project/{project_name}/settings",path:{project_name:e},body:r,mediaType:"application/json",errors:{404:"Not Found",422:"Unprocessable Entity",500:"Internal Server Error"}})}circuitSmartContractVerifier(e){return this.httpRequest.request({method:"GET",url:"/api/v1/circuit/{circuit_id}/smart_contract_verifier",path:{circuit_id:e},errors:{404:"Not Found",409:"Conflict",500:"Internal Server Error",501:"Not Implemented"}})}circuitStatus(e){return this.httpRequest.request({method:"GET",url:"/api/v1/circuit/{circuit_id}/status",path:{circuit_id:e},errors:{404:"Not Found",500:"Internal Server Error"}})}passwordChangeWithJwtAuth(e){return this.httpRequest.request({method:"POST",url:"/api/v1/password/change",body:e,mediaType:"application/json",errors:{422:"Unprocessable Entity"}})}proofList(e){return this.httpRequest.request({method:"POST",url:"/api/v1/proof/list",body:e,mediaType:"application/json",errors:{500:"Internal Server Error"}})}proofListPaginated(e,r=100,o){return this.httpRequest.request({method:"POST",url:"/api/v1/proof/list/paginated",query:{limit:r,offset:o},body:e,mediaType:"application/json",errors:{500:"Internal Server Error"}})}proofStatus(e){return this.httpRequest.request({method:"GET",url:"/api/v1/proof/{proof_id}/status",path:{proof_id:e},errors:{404:"Not Found",500:"Internal Server Error"}})}sindriManifestSchema(){return this.httpRequest.request({method:"GET",url:"/api/v1/sindri-manifest-schema.json"})}teamAvatarUpload(e){return this.httpRequest.request({method:"POST",url:"/api/v1/team/avatar/upload",formData:e,mediaType:"multipart/form-data",errors:{400:"Bad Request",500:"Internal Server Error"}})}teamDetail(e){return this.httpRequest.request({method:"GET",url:"/api/v1/team/{team_name}/detail",path:{team_name:e},errors:{404:"Not Found"}})}teamMe(){return this.httpRequest.request({method:"GET",url:"/api/v1/team/me"})}userMeWithJwtAuth(){return this.httpRequest.request({method:"GET",url:"/api/v1/user/me"})}};var q=class{constructor(e){this.httpRequest=e}proofDetail(e,r=!0,o=!0,s=!0,n=!0){return this.httpRequest.request({method:"GET",url:"/api/v1/proof/{proof_id}/detail",path:{proof_id:e},query:{include_proof:r,include_public:o,include_smart_contract_calldata:s,include_verification_key:n},errors:{404:"Not Found",500:"Internal Server Error",501:"Not Implemented"}})}proofDelete(e){return this.httpRequest.request({method:"DELETE",url:"/api/v1/proof/{proof_id}/delete",path:{proof_id:e},errors:{404:"Not Found",500:"Internal Server Error"}})}};var w=class{constructor(e){this.httpRequest=e}jwtTokenVerify(e){return this.httpRequest.request({method:"POST",url:"/api/token/verify",body:e,mediaType:"application/json"})}jwtTokenGenerate(e){return this.httpRequest.request({method:"POST",url:"/api/token/pair",body:e,mediaType:"application/json",errors:{403:"Forbidden"}})}jwtTokenRefresh(e){return this.httpRequest.request({method:"POST",url:"/api/token/refresh",body:e,mediaType:"application/json"})}};var _=class{constructor(e,r=B){this.request=new r({BASE:_nullishCoalesce(_optionalChain([e, 'optionalAccess', _40 => _40.BASE]), () => ("https://sindri.app")),VERSION:_nullishCoalesce(_optionalChain([e, 'optionalAccess', _41 => _41.VERSION]), () => ("1.12.21")),WITH_CREDENTIALS:_nullishCoalesce(_optionalChain([e, 'optionalAccess', _42 => _42.WITH_CREDENTIALS]), () => (!1)),CREDENTIALS:_nullishCoalesce(_optionalChain([e, 'optionalAccess', _43 => _43.CREDENTIALS]), () => ("include")),TOKEN:_optionalChain([e, 'optionalAccess', _44 => _44.TOKEN]),USERNAME:_optionalChain([e, 'optionalAccess', _45 => _45.USERNAME]),PASSWORD:_optionalChain([e, 'optionalAccess', _46 => _46.PASSWORD]),HEADERS:_optionalChain([e, 'optionalAccess', _47 => _47.HEADERS]),ENCODE_PATH:_optionalChain([e, 'optionalAccess', _48 => _48.ENCODE_PATH])}),this.authorization=new v(this.request),this.circuits=new O(this.request),this.internal=new x(this.request),this.proofs=new q(this.request),this.token=new w(this.request)}};var _fs = require('fs'); var _fs2 = _interopRequireDefault(_fs);var _envpaths = require('env-paths'); var _envpaths2 = _interopRequireDefault(_envpaths);var _lodash = require('lodash'); var _lodash2 = _interopRequireDefault(_lodash);var _zod = require('zod');var ee=()=>{let t=_envpaths2.default.call(void 0, "sindri",{suffix:""});return _path2.default.join(t.config,"sindri.conf.json")},K=_zod.z.object({auth:_zod.z.nullable(_zod.z.object({apiKey:_zod.z.string(),apiKeyId:_zod.z.string(),apiKeyName:_zod.z.string(),baseUrl:_zod.z.string().url(),teamId:_zod.z.number(),teamSlug:_zod.z.string()})).default(null)}),be=K.parse({}),Ce=t=>{let e=ee();if(_fs2.default.existsSync(e)){_optionalChain([t, 'optionalAccess', _49 => _49.debug, 'call', _50 => _50(`Loading config from "${e}".`)]);try{let r=_fs2.default.readFileSync(e,{encoding:"utf-8"}),o=K.parse(JSON.parse(r));return _optionalChain([t, 'optionalAccess', _51 => _51.debug, 'call', _52 => _52("Config loaded successfully.")]),o}catch(r){_optionalChain([t, 'optionalAccess', _53 => _53.warn, 'call', _54 => _54(`The config schema in "${e}" is invalid and will not be used.
To remove it and start fresh, run:
    rm ${e}`)]),_optionalChain([t, 'optionalAccess', _55 => _55.debug, 'call', _56 => _56(r)])}}return _optionalChain([t, 'optionalAccess', _57 => _57.debug, 'call', _58 => _58(`Config file "${e}" does not exist, initializing default config.`)]),_lodash2.default.cloneDeep(be)},k=class{constructor(e){this.logger=e,this.reload()}get auth(){return _lodash2.default.cloneDeep(this._config.auth)}get config(){return _lodash2.default.cloneDeep(this._config)}reload(){this._config=Ce(this.logger)}update(e){_optionalChain([this, 'access', _59 => _59.logger, 'optionalAccess', _60 => _60.debug, 'call', _61 => _61("Merging in config update:")]),_optionalChain([this, 'access', _62 => _62.logger, 'optionalAccess', _63 => _63.debug, 'call', _64 => _64(e)]);let r=_lodash2.default.cloneDeep(this._config);_lodash2.default.merge(r,e),this._config=K.parse(r);let o=ee(),s=_path2.default.dirname(o);_fs2.default.existsSync(s)||_fs2.default.mkdirSync(s,{recursive:!0}),_optionalChain([this, 'access', _65 => _65.logger, 'optionalAccess', _66 => _66.debug, 'call', _67 => _67(`Writing merged config to "${o}":`,this._config)]),_fs2.default.writeFileSync(o,JSON.stringify(this._config,null,2),{encoding:"utf-8"})}};var _pino = require('pino'); var _pino2 = _interopRequireDefault(_pino);var _pinopretty = require('pino-pretty'); var _pinopretty2 = _interopRequireDefault(_pinopretty);var J=t=>{let e=_pino2.default.call(void 0, process.env.BROWSER_BUILD?{browser:{asObject:!0}}:_pinopretty2.default.call(void 0, {colorize:!0,destination:2,ignore:"hostname,pid",levelFirst:!1,sync:!0}));return e.level=_nullishCoalesce(t, () => (!0))?"silent":"info",e},kt=J();var C=null;function Ee({cache:t=!0,logger:e,raiseExceptions:r=!1}={}){if(t&&C)return C;if(process.env.BROWSER_BUILD)return C={};let{SINDRI_META:o}=process.env;if(!o)return C={};let s=([i,p])=>{if(typeof p!="string"){let l=`Invalid metadata entry for '${i}' (value must be a string).`;if(r)throw new Error(l);return _optionalChain([e, 'optionalAccess', _68 => _68.warn, 'call', _69 => _69({key:i,value:p,SINDRI_META:o},l+" Ignoring.")]),!1}let u=te(i,p);if(u){if(r)throw new Error(u);return _optionalChain([e, 'optionalAccess', _70 => _70.warn, 'call', _71 => _71({key:i,value:p,SINDRI_META:o},u+" Ignoring.")]),!1}return!0};if(o.startsWith("{"))try{return C=Object.fromEntries(Object.entries(JSON.parse(o)).filter(s))}catch(i){let p="Failed to parse 'SINDRI_META' as JSON.";if(r)throw new Error(p);return _optionalChain([e, 'optionalAccess', _72 => _72.warn, 'call', _73 => _73({SINDRI_META:o,error:i.toString()},p+" Using '{}' as the default.")]),C={}}let n="\0";return C=Object.fromEntries(o.replace(/::/g,n).split(":").map(i=>i.replace(new RegExp(n,"g"),":")).filter(i=>{if(!i.includes("=")){let p=`Invalid 'SINDRI_META' metadata segment '${i}' (missing '=', try 'key=value').`;if(r)throw new Error(p);return _optionalChain([e, 'optionalAccess', _74 => _74.warn, 'call', _75 => _75({segment:i,SINDRI_META:o},p+" Ignoring.")]),!1}return!0}).map(i=>{let p=i.indexOf("=");return[i.slice(0,p),i.slice(p+1)]}).filter(s))}function G(t){let e=Ee({raiseExceptions:!0});return Object.entries(t).forEach(([r,o])=>{let s=te(r,o);if(s)throw new Error(s)}),{...e,...t}}function te(t,e){let i=/^[a-zA-Z][a-zA-Z0-9_-]*$/;return t.length<1||t.length>64?`Invalid metadata key length for '${t}' (must be 1-64 characters).`:i.test(t)?e.length<0||e.length>4096?`Invalid metadata value length for '${t}' (must be 0-4096 characters).`:null:`Invalid metadata key for '${t}' (must start with an alphabet character and only include alphanumeric characters, underscores, and hyphens).`}var $= (_class =class t{__init() {this.pollingInterval=1e3}__init2() {this.retryOptions={minTimeout:1e3,retries:6}}constructor(e={},{retryOptions:r}={}){;_class.prototype.__init.call(this);_class.prototype.__init2.call(this);this._client=new _,this._clientConfig=this._client.request.config;let o="v0.0.1-alpha.61";this._clientConfig.HEADERS={...this._clientConfig.HEADERS,"Sindri-Client":`sindri-js-sdk/${o}`},this.logger=J(),process.env.BROWSER_BUILD||(this._config=new k(this.logger)),this._clientConfig.sindri=this,this.authorize(e),r&&(this.retryOptions=structuredClone(r))}get apiKey(){return this._clientConfig.TOKEN&&typeof this._clientConfig.TOKEN!="string"?null:this._clientConfig.TOKEN||null}get baseUrl(){return this._clientConfig.BASE}get logLevel(){return this.logger.level}set logLevel(e){this.logger.level=e,this.logger.debug(`Set log level to "${this.logger.level}".`)}authorize(e){return process.env.BROWSER_BUILD?(this._clientConfig.BASE=e.baseUrl||"https://sindri.app",this._clientConfig.TOKEN=e.apiKey):(this._config.reload(),this._clientConfig.BASE=e.baseUrl||process.env.SINDRI_BASE_URL||_optionalChain([this, 'access', _76 => _76._config, 'access', _77 => _77.auth, 'optionalAccess', _78 => _78.baseUrl])||this._clientConfig.BASE||"https://sindri.app",this._clientConfig.TOKEN=e.apiKey||process.env.SINDRI_API_KEY||_optionalChain([this, 'access', _79 => _79._config, 'access', _80 => _80.auth, 'optionalAccess', _81 => _81.apiKey])),!!(this._clientConfig.BASE&&this._clientConfig.TOKEN)}create(e,r){return new t(e,r)}async createCircuit(e,r=["latest"],o={}){let s=new P;r=typeof r=="string"?[r]:_nullishCoalesce(r, () => ([]));for(let l of r){if(!/^[-a-zA-Z0-9_.]+$/.test(l))throw new Error(`"${l}" is not a valid tag. Tags may only contain alphanumeric characters, underscores, hyphens, and periods.`);s.append("tags",l)}if(r.length===0&&s.append("tags",""),s.append("meta",JSON.stringify(G(o))),typeof e=="string"){if(process.env.BROWSER_BUILD)throw new Error("Specifying `project` as a path is not allowed in the browser build.");let l;try{l=await _promises.stat.call(void 0, e)}catch (e4){throw new Error(`The "${e}" path does not exist or you do not have permission to access it.`)}if(l.isFile()){if(!/\.(zip|tar|tar\.gz|tgz)$/i.test(e))throw new Error("Only gzipped tarballs or zip files are supported.");let a=_path2.default.basename(e),c=await _promises.readFile.call(void 0, e);s.append("files",new T([c],a))}else if(l.isDirectory()){let a=_path2.default.join(e,"sindri.json"),c;try{c=await _promises.readFile.call(void 0, a,{encoding:"utf-8"})}catch (e5){throw new Error(`Expected Sindri manifest file at "${a}" does not exist.`)}let g;try{g=JSON.parse(c)}catch (e6){throw new Error(`Could not parse "${a}", is it valid JSON?`)}let f=_optionalChain([g, 'optionalAccess', _82 => _82.name]);if(!f)throw new Error(`No circuit "name" field was found in "${a}", the manifest is invalid.`);let y=_ignorewalk2.default.sync({follow:!0,ignoreFiles:[".sindriignore"],path:e}).filter(E=>!/(^|\/)\.git(\/|$)/.test(E)),d=_path2.default.basename(a);y.includes(d)||y.push(d);let h=`${f}.tar.gz`;y.sort((E,H)=>E.localeCompare(H));let b=_tar2.default.c({cwd:e,gzip:!0,onwarn:(E,H)=>{this.logger.warn(`While creating tarball: ${E} - ${H}`)},prefix:`${f}/`,sync:!0},y);s.append("files",new T([b.read()],h))}else throw new Error(`The "${e}" path is not a file or directory.`)}else if(Array.isArray(e)){if(!e.every(d=>d instanceof T))throw new Error("All entries in `project` must be `File` instances.");let l=e.find(d=>d.name==="sindri.json");if(!l)throw new Error("The `project` array must include a `sindri.json` file.");let a;try{a=JSON.parse(await l.text())}catch (e7){throw new Error('Could not parse "sindri.json", is it valid JSON?')}let c=_optionalChain([a, 'optionalAccess', _83 => _83.name]);if(!c)throw new Error('No circuit "name" field was found in "sindri.json", the manifest is invalid.');let g=new _tarjs2.default;e.sort((d,h)=>d.name.localeCompare(h.name));for(let d of e){let h=new Uint8Array(await d.arrayBuffer());await new Promise(b=>g.append(`${c}/${d.name}`,h,b))}let f=new Uint8Array(_gzipjs2.default.zip(g.out)),y=new T([f],`${c}.tar.gz`);process.env.BROWSER_BUILD,s.append("files",y)}let n=this._clientConfig.HEADERS;this._clientConfig.HEADERS={...n,"Content-Type":"multipart/form-data; boundary=----WebKitFormBoundary0buQ8d6EhWcs9X9d"};let p=await this._client.circuits.circuitCreate(s);this._clientConfig.HEADERS=n;let u=p.circuit_id;for(;;){let l=await this._client.internal.circuitStatus(u);if(l.status==="Ready"||l.status==="Failed")break;await new Promise(a=>setTimeout(a,this.pollingInterval))}return this._client.circuits.circuitDetail(u,!1)}async getAllCircuitProofs(e){return await this._client.circuits.circuitProofs(e)}async getAllCircuits(){return await this._client.circuits.circuitList()}async getCircuit(e){return await this._client.circuits.circuitDetail(e)}async getProof(e){return await this._client.proofs.proofDetail(e)}async proveCircuit(e,r,o=!1,s=!1,n={}){let p=(await this._client.circuits.proofCreate(e,{meta:G(n),perform_verify:o,proof_input:r})).proof_id;for(;;){let u=await this._client.internal.proofStatus(p);if(u.status==="Ready"||u.status==="Failed")break;await new Promise(l=>setTimeout(l,this.pollingInterval))}return this._client.proofs.proofDetail(p,!0,!0,s,!0)}}, _class);var ar=new $;exports.default = ar;

module.exports = exports.default;
//# sourceMappingURL=index.js.map